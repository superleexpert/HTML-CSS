CSS盒子模型：仅仅是一个形象比喻，所有标签都可以比喻成盒子

在HTML中所有标签都可以设置
宽度和高度 == 指定可以存放内容的区域
内边距 == 填充物
边框 == 手机盒子自身
外边距 == 盒子和纸盒之间的间隙

--盒子宽度和高度--
内容的宽度和高度：就是通过width和height属性设置的宽度和高度

元素的宽度和高度：
宽度= 左边框+左内边距+width+右内边距+右边框
高度同理

元素空间的宽度和高度：
宽度 = 左边外边距+左边框+左内边距+width+右内边距+右边框+右边外边距
高度同理

---
CSS3中新增box-sizing属性，可以保证给盒子新增padding和border之后，盒子元素的宽度和高度不变

---
控制嵌套关系盒子之前的距离，优先考虑使用padding，其次再考虑使用margin
margin：0 auto只对水平有效，使里面的盒子在外面的盒子中居中，让盒子自己水平居中
text-align：让盒子里的内容居中

---
为什么要清空默认边距（内外边距）
为了更好计算盒子的尺寸，首先建议清空所有内外边距

---
行高：CSS中所有的行都有自己的行高
行高和盒子的高不是同一个高度
规律：文字在行高中默认是垂直居中的

要想"一行"文字在盒子中垂直居中，只需要设置这行文字的行高等于盒子的高度即可
在企业开发中，如果一个盒子中有多行文字，只能通过设置padding来设置居中

盒子是存储的是文字的话，会以盒子的左边距为基准






