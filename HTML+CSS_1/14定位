定位流：

相对定位:
就是相对于自己以前在标准流中的位置来移动
不脱离标准流，在标准流中还是占用空间的
注意点：
position：relative 配合 top left rigt bottom来使用
在相对定位中是区分块级元素、行内元素、行内块级元素的
相对定位的元素会占用标准流中的位置，所以给相对定位的元素设置margin、padding等属性时会影响到标准流的布局
应用场景：
用于对元素进行微调，配合后面的绝对定位来配合使用

绝对定位：
position：absolute(生成绝对定位的元素，相对于 static 定位以外的第一个父元素进行定位。)
注意点：
1.是脱离标准流的
2.在绝对定位中是不区分块级元素、行内元素、行内块级元素的
3.是相对于body来定位的
规律：
1.默认无论有没有祖先元素，都会以body为参考点
2.如果一个绝对定位的元素有祖先元素，并且祖先元素也是定位流，那么这个绝对定位元素就会以定位流的那个祖先元素作为参考点
2.1 只要是绝对定位元素的祖先元素都可以
2.2 指的定位流是指绝对、相对、固态定位，只有静态定位不行
3.如果祖先元素有多个元素都是定位元素，那么以离它最近的祖先元素作为参考点
注意点：
1.如果是以body作为参考点，其实是以网页首屏的宽度和高度作为参考点，而不是整个网页的宽度高度
2.一个绝对定位的元素会忽略祖先元素的padding

绝对定位的子绝父相：子元素应用绝对定位，父元素用相对定位

固定定位：
position：fixed(生成绝对定位的元素，相对于浏览器窗口进行定位。)
1.固定定位的元素是脱离标准流的，不会占用标准流的空间
2.和绝对定位一样，不区分行内、块级、行内块级
3.不随着滚动条的滚动而滚动

===
z-index属性：专门用于控制定位流元素的覆盖关系的
1.默认定位流会覆盖标准流的元素
2.都设置了后，睡得z值大谁就显示在上面

从父现象：
1.如果两个元素的父元素都没设置z，那么谁大谁显示在上面
2.如果。。。。。。。。都设置了z，那么子元素的z属性就会失效，也就是说父元素的z属性比较大的会显示在上面
===

静态定位：


